{
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "windows2012r2BaseAmiId": "ami-904be6f8"
            },
            "us-west-1": {
                "windows2012r2BaseAmiId": "ami-09626b4c"
            },
            "us-west-2": {
                "windows2012r2BaseAmiId": "ami-d38dcce3"
            }
        }
    },
    "Parameters": {
        "EnvType": {
            "Description": "The environment being deployed into",
            "Type": "String"
        },
        "GitBranch": {
            "Description": "Git branch",
            "Type": "String"
        },
        "GitRepo": {
            "Description": "Git repository",
            "Type": "String"
        },
        "HasKeyElementName": {
            "AllowedPattern": "[a-zA-z0-9]*",
            "ConstraintDescription": "must contain only alphanumberic characters",
            "Description": "HasType PrimaryKey Name",
            "MaxLength": "2048",
            "MinLength": "1",
            "Type": "String"
        },
        "HasKeyElementType": {
            "AllowedPattern": "[S|N]",
            "ConstraintDescription": "must be either S or N",
            "Default": "S",
            "Description": "HashType PrimaryKey Type",
            "MaxLength": "1",
            "MinLength": "1",
            "Type": "String"
        },
        "IGW": {
            "Description": "Internet gateway",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "m1.medium",
            "Description": "NET EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "Description": "EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        },
        "ReadCapacityUnits": {
            "ConstraintDescription": "should be between 5 and 10000",
            "Default": "5",
            "Description": "Provisioned read throughput",
            "MaxValue": "10000",
            "MinValue": "5",
            "Type": "Number"
        },
        "ScaleCapacity": {
            "Default": "3",
            "Description": "Number of NET servers to run",
            "Type": "String"
        },
        "ServiceRegistry": {
            "Description": "Service registry",
            "Type": "String"
        },
        "SubnetBlocks": {
            "Default": "10.0.10.0/24, 10.0.11.0/24, 10.0.12.0/24",
            "Description": "API CIDR blocks",
            "Type": "CommaDelimitedList"
        },
        "Tier": {
            "Description": "Tier",
            "Type": "String"
        },
        "VPC": {
            "Description": "VPC Id",
            "Type": "String"
        },
        "Version": {
            "Description": "Version",
            "Type": "String"
        },
        "WriteCapacityUnits": {
            "ConstraintDescription": "should be between 5 and 10000",
            "Default": "10",
            "Description": "Provisioned write throughput",
            "MaxValue": "10000",
            "MinValue": "5",
            "Type": "Number"
        },
        "instancesize": {
            "Description": "Size of an instance",
            "Type": "String"
        },
        "port": {
            "Description": "Port",
            "Type": "String"
        }
    },
    "Resources": {
        "AttachGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "PrivateIGW"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "DynamoConfigTable": {
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": {
                            "Ref": "HasKeyElementName"
                        },
                        "AttributeType": {
                            "Ref": "HasKeyElementType"
                        }
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": {
                            "Ref": "HasKeyElementName"
                        },
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "ReadCapacityUnits"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "WriteCapacityUnits"
                    }
                }
            },
            "Type": "AWS::DynamoDB::Table"
        },
        "LoggingQueue": {
            "Type": "AWS::SQS::Queue"
        },
        "PrivateACL": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PrivateELB": {
            "Properties": {
                "CrossZone": "true",
                "HealthCheck": {
                    "HealthyThreshold": "5",
                    "Interval": "20",
                    "Target": "HTTP:80/",
                    "Timeout": "15",
                    "UnhealthyThreshold": "2"
                },
                "Listeners": [
                    {
                        "InstancePort": "80",
                        "InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "Scheme": "internal",
                "SecurityGroups": {
                    "Ref": "LBSecurityGroup"
                },
                "Subnets": [
                    {
                        "Ref": "PrivateSubnetA"
                    },
                    {
                        "Ref": "PrivateSubnetB"
                    },
                    {
                        "Ref": "PrivateSubnetC"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "PrivateIGW": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "PrivateLC": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "windows2012r2BaseAmiId"
                    ]
                },
                "InstanceMonitoring": "false",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<powershell>",
                                "Set-ExecutionPolicy unrestricted -force",
                                "Import-Module ServerManager",
                                "function Expand-ZIPFile($file, $destination)",
                                "{",
                                "    $shell = new-object -com shell.application",
                                "    $zip = $shell.NameSpace($file)",
                                "    foreach($item in $zip.items())",
                                "    {",
                                "    $shell.Namespace($destination).copyhere($item)",
                                "    }",
                                "}",
                                "",
                                "$IISFeatures = @(\"Web-Static-Content\", \"Web-Default-Doc\",\"Web-Http-Errors\", \"Web-Asp-Net\", \"Web-Asp-Net45\", \"Web-Net-Ext\", \"Web-ISAPI-Ext\", \"Web-ISAPI-Filter\", \"Web-Http-Logging\", \"Web-Log-Libraries\", \"Web-Request-Monitor\", \"Web-Http-Tracing\", \"Web-Windows-Auth\", \"Web-Filtering\", \"Web-IP-Security\", \"Web-Stat-Compression\", \"Web-Dyn-Compression\", \"Web-Mgmt-Console\", \"Web-Scripting-Tools\", \"Web-Metabase\", \"Web-WMI\", \"Web-Lgcy-Scripting\",\"NET-Framework-Core\")",
                                "Add-WindowsFeature -Name $IISfeatures -logPath \"$Env:ComputerName.log\""
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "PrivateRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnetA": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "SubnetBlocks"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                " ",
                                [
                                    {
                                        "Ref": "EnvType"
                                    },
                                    "Subnet A"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnetB": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "SubnetBlocks"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                " ",
                                [
                                    {
                                        "Ref": "EnvType"
                                    },
                                    "Subnet B"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnetC": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Select": [
                        "2",
                        {
                            "Ref": "SubnetBlocks"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                " ",
                                [
                                    {
                                        "Ref": "EnvType"
                                    },
                                    "Subnet C"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "S3Bucket": {
            "Properties": {
                "AccessControl": "AuthenticatedRead"
            },
            "Type": "AWS::S3::Bucket"
        }
    }
}
